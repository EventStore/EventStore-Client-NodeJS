// source: persistent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.CreateReq', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.CreateReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.CreateResp', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.DeleteReq', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.DeleteResp', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq.ContentCase', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.ContentCase', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.CountCase', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.PositionCase', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UUID', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UUID.Structured', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UUID.ValueCase', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UpdateReq', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings', null, global);
goog.exportSymbol('proto.event_store.grpc.persistent_subscriptions.UpdateResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadReq.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.repeatedFields_, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.repeatedFields_, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.persistent_subscriptions.ReadResp.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadResp.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.displayName = 'proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.CreateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.CreateReq.displayName = 'proto.event_store.grpc.persistent_subscriptions.CreateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.CreateReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.displayName = 'proto.event_store.grpc.persistent_subscriptions.CreateReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.displayName = 'proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.CreateResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.CreateResp.displayName = 'proto.event_store.grpc.persistent_subscriptions.CreateResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UpdateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.displayName = 'proto.event_store.grpc.persistent_subscriptions.UpdateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.displayName = 'proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.displayName = 'proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UpdateResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UpdateResp.displayName = 'proto.event_store.grpc.persistent_subscriptions.UpdateResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.DeleteReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.DeleteReq.displayName = 'proto.event_store.grpc.persistent_subscriptions.DeleteReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.displayName = 'proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.DeleteResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.DeleteResp.displayName = 'proto.event_store.grpc.persistent_subscriptions.DeleteResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UUID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UUID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UUID.displayName = 'proto.event_store.grpc.persistent_subscriptions.UUID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.persistent_subscriptions.UUID.Structured, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.persistent_subscriptions.UUID.Structured.displayName = 'proto.event_store.grpc.persistent_subscriptions.UUID.Structured';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.ContentCase = {
  CONTENT_NOT_SET: 0,
  OPTIONS: 1,
  ACK: 2,
  NACK: 3
};

/**
 * @return {proto.event_store.grpc.persistent_subscriptions.ReadReq.ContentCase}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.getContentCase = function() {
  return /** @type {proto.event_store.grpc.persistent_subscriptions.ReadReq.ContentCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.toObject(includeInstance, f),
    ack: (f = msg.getAck()) && proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.toObject(includeInstance, f),
    nack: (f = msg.getNack()) && proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadReq;
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Options;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 3:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.deserializeBinaryFromReader);
      msg.setNack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.serializeBinaryToWriter
    );
  }
  f = message.getNack();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bufferSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Options;
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBufferSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBufferSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string stream_name = 1;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.setStreamName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string group_name = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.getGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.setGroupName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 buffer_size = 3;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.getBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Options.prototype.setBufferSize = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    idsList: jspb.Message.toObjectList(msg.getIdsList(),
    proto.event_store.grpc.persistent_subscriptions.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack;
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.persistent_subscriptions.UUID;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinaryFromReader);
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.event_store.grpc.persistent_subscriptions.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/** @param {!(string|Uint8Array)} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.setId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated UUID ids = 2;
 * @return {!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.getIdsList = function() {
  return /** @type{!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UUID, 2));
};


/** @param {!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.setIdsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.addIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.event_store.grpc.persistent_subscriptions.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack.prototype.clearIdsList = function() {
  this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    idsList: jspb.Message.toObjectList(msg.getIdsList(),
    proto.event_store.grpc.persistent_subscriptions.UUID.toObject, includeInstance),
    action: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack;
  return proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.persistent_subscriptions.UUID;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinaryFromReader);
      msg.addIds(value);
      break;
    case 3:
      var value = /** @type {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.event_store.grpc.persistent_subscriptions.UUID.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action = {
  UNKNOWN: 0,
  PARK: 1,
  RETRY: 2,
  SKIP: 3,
  STOP: 4
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/** @param {!(string|Uint8Array)} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.setId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated UUID ids = 2;
 * @return {!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getIdsList = function() {
  return /** @type{!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UUID, 2));
};


/** @param {!Array<!proto.event_store.grpc.persistent_subscriptions.UUID>} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.setIdsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.addIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.event_store.grpc.persistent_subscriptions.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.clearIdsList = function() {
  this.setIdsList([]);
};


/**
 * optional Action action = 3;
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getAction = function() {
  return /** @type {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.Action} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.setAction = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string reason = 4;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadReq.Options, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Options|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.setOptions = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Ack ack = 2;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.getAck = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack, 2));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Ack|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.setAck = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.clearAck = function() {
  this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.hasAck = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Nack nack = 3;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.getNack = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack, 3));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadReq.Nack|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.setNack = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.event_store.grpc.persistent_subscriptions.ReadReq.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.clearNack = function() {
  this.setNack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadReq.prototype.hasNack = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ContentCase = {
  CONTENT_NOT_SET: 0,
  EVENT: 1,
  EMPTY: 2
};

/**
 * @return {proto.event_store.grpc.persistent_subscriptions.ReadResp.ContentCase}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.getContentCase = function() {
  return /** @type {proto.event_store.grpc.persistent_subscriptions.ReadResp.ContentCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.toObject(includeInstance, f),
    empty: (f = msg.getEmpty()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadResp;
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_ = [[3,4],[5,6]];

/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.PositionCase = {
  POSITION_NOT_SET: 0,
  COMMIT_POSITION: 3,
  NO_POSITION: 4
};

/**
 * @return {proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.PositionCase}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getPositionCase = function() {
  return /** @type {proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.PositionCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.CountCase = {
  COUNT_NOT_SET: 0,
  RETRY_COUNT: 5,
  EMPTY: 6
};

/**
 * @return {proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.CountCase}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getCountCase = function() {
  return /** @type {proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.CountCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.toObject(includeInstance, f),
    link: (f = msg.getLink()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.toObject(includeInstance, f),
    commitPosition: jspb.Message.getFieldWithDefault(msg, 3, 0),
    noPosition: (f = msg.getNoPosition()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.toObject(includeInstance, f),
    retryCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    empty: (f = msg.getEmpty()) && proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent;
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.deserializeBinaryFromReader);
      msg.setLink(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCommitPosition(value);
      break;
    case 4:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinaryFromReader);
      msg.setNoPosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetryCount(value);
      break;
    case 6:
      var value = new proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.serializeBinaryToWriter
    );
  }
  f = message.getLink();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getNoPosition();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.event_store.grpc.persistent_subscriptions.UUID.toObject(includeInstance, f),
    streamName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    streamRevision: jspb.Message.getFieldWithDefault(msg, 3, 0),
    preparePosition: jspb.Message.getFieldWithDefault(msg, 4, 0),
    commitPosition: jspb.Message.getFieldWithDefault(msg, 5, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    customMetadata: msg.getCustomMetadata_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent;
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.UUID;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStreamRevision(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPreparePosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCommitPosition(value);
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCustomMetadata(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.UUID.serializeBinaryToWriter
    );
  }
  f = message.getStreamName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStreamRevision();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPreparePosition();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCommitPosition();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCustomMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional UUID id = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.UUID}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getId = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.UUID} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UUID, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.UUID|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string stream_name = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setStreamName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 stream_revision = 3;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getStreamRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setStreamRevision = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 prepare_position = 4;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getPreparePosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setPreparePosition = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 commit_position = 5;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getCommitPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setCommitPosition = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
};


/**
 * optional bytes custom_metadata = 7;
 * @return {!(string|Uint8Array)}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getCustomMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes custom_metadata = 7;
 * This is a type-conversion wrapper around `getCustomMetadata()`
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getCustomMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCustomMetadata()));
};


/**
 * optional bytes custom_metadata = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCustomMetadata()`
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getCustomMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCustomMetadata()));
};


/** @param {!(string|Uint8Array)} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setCustomMetadata = function(value) {
  jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes data = 8;
 * @return {!(string|Uint8Array)}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes data = 8;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.prototype.setData = function(value) {
  jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional RecordedEvent event = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getEvent = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RecordedEvent link = 2;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getLink = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent, 2));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setLink = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearLink = function() {
  this.setLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 commit_position = 3;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getCommitPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setCommitPosition = function(value) {
  jspb.Message.setOneofField(this, 3, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearCommitPosition = function() {
  jspb.Message.setOneofField(this, 3, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasCommitPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Empty no_position = 4;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getNoPosition = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty, 4));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setNoPosition = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearNoPosition = function() {
  this.setNoPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasNoPosition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 retry_count = 5;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getRetryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setRetryCount = function(value) {
  jspb.Message.setOneofField(this, 5, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearRetryCount = function() {
  jspb.Message.setOneofField(this, 5, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasRetryCount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Empty empty = 6;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.getEmpty = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty, 6));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.setEmpty = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.clearEmpty = function() {
  this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty;
  return proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional ReadEvent event = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.getEvent = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.ReadEvent|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.setEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.event_store.grpc.persistent_subscriptions.ReadResp.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Empty empty = 2;
 * @return {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.getEmpty = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty, 2));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.ReadResp.Empty|undefined} value */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.setEmpty = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.event_store.grpc.persistent_subscriptions.ReadResp.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.clearEmpty = function() {
  this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.ReadResp.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.CreateReq;
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.CreateReq.Options;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.CreateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy = {
  DISPATCHTOSINGLE: 0,
  ROUNDROBIN: 1,
  PINNED: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    settings: (f = msg.getSettings()) && proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.CreateReq.Options;
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupName(value);
      break;
    case 3:
      var value = new proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stream_name = 1;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.setStreamName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string group_name = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.getGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.setGroupName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Settings settings = 3;
 * @return {?proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.getSettings = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings, 3));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings|undefined} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.setSettings = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.clearSettings = function() {
  this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Options.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    resolveLinks: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    revision: jspb.Message.getFieldWithDefault(msg, 2, 0),
    extraStatistics: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    messageTimeout: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxRetryCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    checkpointAfter: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minCheckpointCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    maxCheckpointCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    maxSubscriberCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    liveBufferSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    readBatchSize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    historyBufferSize: jspb.Message.getFieldWithDefault(msg, 12, 0),
    namedConsumerStrategy: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings;
  return proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolveLinks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRevision(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtraStatistics(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageTimeout(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxRetryCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckpointAfter(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinCheckpointCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxCheckpointCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxSubscriberCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLiveBufferSize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadBatchSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistoryBufferSize(value);
      break;
    case 13:
      var value = /** @type {!proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy} */ (reader.readEnum());
      msg.setNamedConsumerStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolveLinks();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExtraStatistics();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMessageTimeout();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxRetryCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCheckpointAfter();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMinCheckpointCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMaxCheckpointCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMaxSubscriberCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getLiveBufferSize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getReadBatchSize();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getHistoryBufferSize();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getNamedConsumerStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
};


/**
 * optional bool resolve_links = 1;
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getResolveLinks = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setResolveLinks = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 revision = 2;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setRevision = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool extra_statistics = 3;
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getExtraStatistics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setExtraStatistics = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 message_timeout = 4;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getMessageTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setMessageTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 max_retry_count = 5;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getMaxRetryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setMaxRetryCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 checkpoint_after = 6;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getCheckpointAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setCheckpointAfter = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 min_checkpoint_count = 7;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getMinCheckpointCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setMinCheckpointCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 max_checkpoint_count = 8;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getMaxCheckpointCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setMaxCheckpointCount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 max_subscriber_count = 9;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getMaxSubscriberCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setMaxSubscriberCount = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 live_buffer_size = 10;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getLiveBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setLiveBufferSize = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 read_batch_size = 11;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getReadBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setReadBatchSize = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 history_buffer_size = 12;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getHistoryBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setHistoryBufferSize = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional ConsumerStrategy named_consumer_strategy = 13;
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.getNamedConsumerStrategy = function() {
  return /** @type {!proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.event_store.grpc.persistent_subscriptions.CreateReq.ConsumerStrategy} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.Settings.prototype.setNamedConsumerStrategy = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.CreateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.CreateReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.CreateReq.Options, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.CreateReq.Options|undefined} value */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.CreateReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.CreateResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateResp}
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.CreateResp;
  return proto.event_store.grpc.persistent_subscriptions.CreateResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.CreateResp}
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.CreateResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.CreateResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.CreateResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UpdateReq;
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy = {
  DISPATCHTOSINGLE: 0,
  ROUNDROBIN: 1,
  PINNED: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    settings: (f = msg.getSettings()) && proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options;
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupName(value);
      break;
    case 3:
      var value = new proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stream_name = 1;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.setStreamName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string group_name = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.getGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.setGroupName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Settings settings = 3;
 * @return {?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.getSettings = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings, 3));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings|undefined} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.setSettings = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.clearSettings = function() {
  this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    resolveLinks: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    revision: jspb.Message.getFieldWithDefault(msg, 2, 0),
    extraStatistics: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    messageTimeout: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxRetryCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    checkpointAfter: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minCheckpointCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    maxCheckpointCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    maxSubscriberCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    liveBufferSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    readBatchSize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    historyBufferSize: jspb.Message.getFieldWithDefault(msg, 12, 0),
    namedConsumerStrategy: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings;
  return proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResolveLinks(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRevision(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtraStatistics(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageTimeout(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxRetryCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCheckpointAfter(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinCheckpointCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxCheckpointCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxSubscriberCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLiveBufferSize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadBatchSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistoryBufferSize(value);
      break;
    case 13:
      var value = /** @type {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy} */ (reader.readEnum());
      msg.setNamedConsumerStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolveLinks();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExtraStatistics();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMessageTimeout();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxRetryCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCheckpointAfter();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMinCheckpointCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMaxCheckpointCount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMaxSubscriberCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getLiveBufferSize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getReadBatchSize();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getHistoryBufferSize();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getNamedConsumerStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
};


/**
 * optional bool resolve_links = 1;
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getResolveLinks = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setResolveLinks = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 revision = 2;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setRevision = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool extra_statistics = 3;
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getExtraStatistics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setExtraStatistics = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 message_timeout = 4;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getMessageTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setMessageTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 max_retry_count = 5;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getMaxRetryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setMaxRetryCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 checkpoint_after = 6;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getCheckpointAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setCheckpointAfter = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 min_checkpoint_count = 7;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getMinCheckpointCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setMinCheckpointCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 max_checkpoint_count = 8;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getMaxCheckpointCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setMaxCheckpointCount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 max_subscriber_count = 9;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getMaxSubscriberCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setMaxSubscriberCount = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 live_buffer_size = 10;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getLiveBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setLiveBufferSize = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 read_batch_size = 11;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getReadBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setReadBatchSize = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 history_buffer_size = 12;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getHistoryBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setHistoryBufferSize = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional ConsumerStrategy named_consumer_strategy = 13;
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.getNamedConsumerStrategy = function() {
  return /** @type {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.event_store.grpc.persistent_subscriptions.UpdateReq.ConsumerStrategy} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.Settings.prototype.setNamedConsumerStrategy = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.UpdateReq.Options|undefined} value */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UpdateResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateResp}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UpdateResp;
  return proto.event_store.grpc.persistent_subscriptions.UpdateResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UpdateResp}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UpdateResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UpdateResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UpdateResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.DeleteReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteReq}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.DeleteReq;
  return proto.event_store.grpc.persistent_subscriptions.DeleteReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteReq}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.DeleteReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options;
  return proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string stream_name = 1;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.getStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.setStreamName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string group_name = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.getGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options.prototype.setGroupName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.DeleteReq.Options|undefined} value */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.DeleteResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteResp}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.DeleteResp;
  return proto.event_store.grpc.persistent_subscriptions.DeleteResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.DeleteResp}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.DeleteResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.DeleteResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.DeleteResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.ValueCase = {
  VALUE_NOT_SET: 0,
  STRUCTURED: 1,
  STRING: 2
};

/**
 * @return {proto.event_store.grpc.persistent_subscriptions.UUID.ValueCase}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.getValueCase = function() {
  return /** @type {proto.event_store.grpc.persistent_subscriptions.UUID.ValueCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UUID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UUID.toObject = function(includeInstance, msg) {
  var f, obj = {
    structured: (f = msg.getStructured()) && proto.event_store.grpc.persistent_subscriptions.UUID.Structured.toObject(includeInstance, f),
    string: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UUID;
  return proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.persistent_subscriptions.UUID.Structured;
      reader.readMessage(value,proto.event_store.grpc.persistent_subscriptions.UUID.Structured.deserializeBinaryFromReader);
      msg.setStructured(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UUID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UUID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructured();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.persistent_subscriptions.UUID.Structured.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.persistent_subscriptions.UUID.Structured.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID.Structured} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.toObject = function(includeInstance, msg) {
  var f, obj = {
    mostSignificantBits: jspb.Message.getFieldWithDefault(msg, 1, 0),
    leastSignificantBits: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID.Structured}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.persistent_subscriptions.UUID.Structured;
  return proto.event_store.grpc.persistent_subscriptions.UUID.Structured.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID.Structured} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.persistent_subscriptions.UUID.Structured}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMostSignificantBits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLeastSignificantBits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.persistent_subscriptions.UUID.Structured.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.persistent_subscriptions.UUID.Structured} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMostSignificantBits();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLeastSignificantBits();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 most_significant_bits = 1;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.getMostSignificantBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.setMostSignificantBits = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 least_significant_bits = 2;
 * @return {number}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.getLeastSignificantBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.event_store.grpc.persistent_subscriptions.UUID.Structured.prototype.setLeastSignificantBits = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Structured structured = 1;
 * @return {?proto.event_store.grpc.persistent_subscriptions.UUID.Structured}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.getStructured = function() {
  return /** @type{?proto.event_store.grpc.persistent_subscriptions.UUID.Structured} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.persistent_subscriptions.UUID.Structured, 1));
};


/** @param {?proto.event_store.grpc.persistent_subscriptions.UUID.Structured|undefined} value */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.setStructured = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.clearStructured = function() {
  this.setStructured(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.hasStructured = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string string = 2;
 * @return {string}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.setString = function(value) {
  jspb.Message.setOneofField(this, 2, proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.clearString = function() {
  jspb.Message.setOneofField(this, 2, proto.event_store.grpc.persistent_subscriptions.UUID.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.persistent_subscriptions.UUID.prototype.hasString = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.event_store.grpc.persistent_subscriptions);
