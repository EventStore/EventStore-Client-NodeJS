// source: projections.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq.Empty', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq.Options.Continuous', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq.Options.ModeCase', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateReq.Options.Transient', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.CreateResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DeleteReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DeleteReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DeleteResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DisableReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DisableReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.DisableResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.EnableReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.EnableReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.EnableResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResetReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResetReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResetResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResultReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResultReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.ResultResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StateReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StateReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StateResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsReq.Empty', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsReq.Options.ModeCase', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsResp', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.StatisticsResp.Details', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.UpdateReq', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.UpdateReq.Empty', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.UpdateReq.Options', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.UpdateReq.Options.EmitOptionsCase', null, global);
goog.exportSymbol('proto.event_store.grpc.projections.UpdateResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.CreateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateReq.displayName = 'proto.event_store.grpc.projections.CreateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.projections.CreateReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateReq.Options.displayName = 'proto.event_store.grpc.projections.CreateReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.CreateReq.Options.Transient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateReq.Options.Transient.displayName = 'proto.event_store.grpc.projections.CreateReq.Options.Transient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.CreateReq.Options.Continuous, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateReq.Options.Continuous.displayName = 'proto.event_store.grpc.projections.CreateReq.Options.Continuous';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateReq.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.CreateReq.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateReq.Empty.displayName = 'proto.event_store.grpc.projections.CreateReq.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.CreateResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.CreateResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.CreateResp.displayName = 'proto.event_store.grpc.projections.CreateResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.UpdateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.UpdateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.UpdateReq.displayName = 'proto.event_store.grpc.projections.UpdateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.UpdateReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.projections.UpdateReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.UpdateReq.Options.displayName = 'proto.event_store.grpc.projections.UpdateReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.UpdateReq.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.UpdateReq.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.UpdateReq.Empty.displayName = 'proto.event_store.grpc.projections.UpdateReq.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.UpdateResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.UpdateResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.UpdateResp.displayName = 'proto.event_store.grpc.projections.UpdateResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DeleteReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DeleteReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DeleteReq.displayName = 'proto.event_store.grpc.projections.DeleteReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DeleteReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DeleteReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DeleteReq.Options.displayName = 'proto.event_store.grpc.projections.DeleteReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DeleteResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DeleteResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DeleteResp.displayName = 'proto.event_store.grpc.projections.DeleteResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StatisticsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StatisticsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StatisticsReq.displayName = 'proto.event_store.grpc.projections.StatisticsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StatisticsReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_);
};
goog.inherits(proto.event_store.grpc.projections.StatisticsReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StatisticsReq.Options.displayName = 'proto.event_store.grpc.projections.StatisticsReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StatisticsReq.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StatisticsReq.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StatisticsReq.Empty.displayName = 'proto.event_store.grpc.projections.StatisticsReq.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StatisticsResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StatisticsResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StatisticsResp.displayName = 'proto.event_store.grpc.projections.StatisticsResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StatisticsResp.Details = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StatisticsResp.Details, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StatisticsResp.Details.displayName = 'proto.event_store.grpc.projections.StatisticsResp.Details';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StateReq.displayName = 'proto.event_store.grpc.projections.StateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StateReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StateReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StateReq.Options.displayName = 'proto.event_store.grpc.projections.StateReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.StateResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.StateResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.StateResp.displayName = 'proto.event_store.grpc.projections.StateResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResultReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResultReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResultReq.displayName = 'proto.event_store.grpc.projections.ResultReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResultReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResultReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResultReq.Options.displayName = 'proto.event_store.grpc.projections.ResultReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResultResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResultResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResultResp.displayName = 'proto.event_store.grpc.projections.ResultResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResetReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResetReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResetReq.displayName = 'proto.event_store.grpc.projections.ResetReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResetReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResetReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResetReq.Options.displayName = 'proto.event_store.grpc.projections.ResetReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.ResetResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.ResetResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.ResetResp.displayName = 'proto.event_store.grpc.projections.ResetResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.EnableReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.EnableReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.EnableReq.displayName = 'proto.event_store.grpc.projections.EnableReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.EnableReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.EnableReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.EnableReq.Options.displayName = 'proto.event_store.grpc.projections.EnableReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.EnableResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.EnableResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.EnableResp.displayName = 'proto.event_store.grpc.projections.EnableResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DisableReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DisableReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DisableReq.displayName = 'proto.event_store.grpc.projections.DisableReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DisableReq.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DisableReq.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DisableReq.Options.displayName = 'proto.event_store.grpc.projections.DisableReq.Options';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_store.grpc.projections.DisableResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_store.grpc.projections.DisableResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_store.grpc.projections.DisableResp.displayName = 'proto.event_store.grpc.projections.DisableResp';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.CreateReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateReq}
 */
proto.event_store.grpc.projections.CreateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateReq;
  return proto.event_store.grpc.projections.CreateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateReq}
 */
proto.event_store.grpc.projections.CreateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.CreateReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.CreateReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.CreateReq.Options.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.event_store.grpc.projections.CreateReq.Options.ModeCase = {
  MODE_NOT_SET: 0,
  ONE_TIME: 1,
  TRANSIENT: 2,
  CONTINUOUS: 3
};

/**
 * @return {proto.event_store.grpc.projections.CreateReq.Options.ModeCase}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.getModeCase = function() {
  return /** @type {proto.event_store.grpc.projections.CreateReq.Options.ModeCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    oneTime: (f = msg.getOneTime()) && proto.event_store.grpc.projections.CreateReq.Empty.toObject(includeInstance, f),
    pb_transient: (f = msg.getTransient()) && proto.event_store.grpc.projections.CreateReq.Options.Transient.toObject(includeInstance, f),
    continuous: (f = msg.getContinuous()) && proto.event_store.grpc.projections.CreateReq.Options.Continuous.toObject(includeInstance, f),
    query: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options}
 */
proto.event_store.grpc.projections.CreateReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateReq.Options;
  return proto.event_store.grpc.projections.CreateReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options}
 */
proto.event_store.grpc.projections.CreateReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.CreateReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.CreateReq.Empty.deserializeBinaryFromReader);
      msg.setOneTime(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.projections.CreateReq.Options.Transient;
      reader.readMessage(value,proto.event_store.grpc.projections.CreateReq.Options.Transient.deserializeBinaryFromReader);
      msg.setTransient(value);
      break;
    case 3:
      var value = new proto.event_store.grpc.projections.CreateReq.Options.Continuous;
      reader.readMessage(value,proto.event_store.grpc.projections.CreateReq.Options.Continuous.deserializeBinaryFromReader);
      msg.setContinuous(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOneTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.CreateReq.Empty.serializeBinaryToWriter
    );
  }
  f = message.getTransient();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_store.grpc.projections.CreateReq.Options.Transient.serializeBinaryToWriter
    );
  }
  f = message.getContinuous();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_store.grpc.projections.CreateReq.Options.Continuous.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateReq.Options.Transient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Transient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options.Transient}
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateReq.Options.Transient;
  return proto.event_store.grpc.projections.CreateReq.Options.Transient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Transient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options.Transient}
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateReq.Options.Transient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Transient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.CreateReq.Options.Transient.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.CreateReq.Options.Transient.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateReq.Options.Continuous.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Continuous} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    trackEmittedStreams: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options.Continuous}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateReq.Options.Continuous;
  return proto.event_store.grpc.projections.CreateReq.Options.Continuous.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Continuous} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateReq.Options.Continuous}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrackEmittedStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateReq.Options.Continuous.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateReq.Options.Continuous} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTrackEmittedStreams();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool track_emitted_streams = 2;
 * @return {boolean}
 */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.getTrackEmittedStreams = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.CreateReq.Options.Continuous.prototype.setTrackEmittedStreams = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Empty one_time = 1;
 * @return {?proto.event_store.grpc.projections.CreateReq.Empty}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.getOneTime = function() {
  return /** @type{?proto.event_store.grpc.projections.CreateReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.CreateReq.Empty, 1));
};


/** @param {?proto.event_store.grpc.projections.CreateReq.Empty|undefined} value */
proto.event_store.grpc.projections.CreateReq.Options.prototype.setOneTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.clearOneTime = function() {
  this.setOneTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.hasOneTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transient transient = 2;
 * @return {?proto.event_store.grpc.projections.CreateReq.Options.Transient}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.getTransient = function() {
  return /** @type{?proto.event_store.grpc.projections.CreateReq.Options.Transient} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.CreateReq.Options.Transient, 2));
};


/** @param {?proto.event_store.grpc.projections.CreateReq.Options.Transient|undefined} value */
proto.event_store.grpc.projections.CreateReq.Options.prototype.setTransient = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.clearTransient = function() {
  this.setTransient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.hasTransient = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Continuous continuous = 3;
 * @return {?proto.event_store.grpc.projections.CreateReq.Options.Continuous}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.getContinuous = function() {
  return /** @type{?proto.event_store.grpc.projections.CreateReq.Options.Continuous} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.CreateReq.Options.Continuous, 3));
};


/** @param {?proto.event_store.grpc.projections.CreateReq.Options.Continuous|undefined} value */
proto.event_store.grpc.projections.CreateReq.Options.prototype.setContinuous = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.event_store.grpc.projections.CreateReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.clearContinuous = function() {
  this.setContinuous(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.hasContinuous = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string query = 4;
 * @return {string}
 */
proto.event_store.grpc.projections.CreateReq.Options.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.CreateReq.Options.prototype.setQuery = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateReq.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateReq.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateReq.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateReq.Empty}
 */
proto.event_store.grpc.projections.CreateReq.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateReq.Empty;
  return proto.event_store.grpc.projections.CreateReq.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateReq.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateReq.Empty}
 */
proto.event_store.grpc.projections.CreateReq.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateReq.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateReq.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateReq.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateReq.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.CreateReq.Options}
 */
proto.event_store.grpc.projections.CreateReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.CreateReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.CreateReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.CreateReq.Options|undefined} value */
proto.event_store.grpc.projections.CreateReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.CreateReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.CreateReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.CreateResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.CreateResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.CreateResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.CreateResp}
 */
proto.event_store.grpc.projections.CreateResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.CreateResp;
  return proto.event_store.grpc.projections.CreateResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.CreateResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.CreateResp}
 */
proto.event_store.grpc.projections.CreateResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.CreateResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.CreateResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.CreateResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.CreateResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.UpdateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.UpdateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.UpdateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.UpdateReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.UpdateReq}
 */
proto.event_store.grpc.projections.UpdateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.UpdateReq;
  return proto.event_store.grpc.projections.UpdateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.UpdateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.UpdateReq}
 */
proto.event_store.grpc.projections.UpdateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.UpdateReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.UpdateReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.UpdateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.UpdateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.UpdateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.UpdateReq.Options.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.event_store.grpc.projections.UpdateReq.Options.EmitOptionsCase = {
  EMIT_OPTIONS_NOT_SET: 0,
  EMIT_ENABLED: 3,
  NO_EMIT_OPTIONS: 4
};

/**
 * @return {proto.event_store.grpc.projections.UpdateReq.Options.EmitOptionsCase}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.getEmitOptionsCase = function() {
  return /** @type {proto.event_store.grpc.projections.UpdateReq.Options.EmitOptionsCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.UpdateReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.UpdateReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emitEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    noEmitOptions: (f = msg.getNoEmitOptions()) && proto.event_store.grpc.projections.UpdateReq.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.UpdateReq.Options}
 */
proto.event_store.grpc.projections.UpdateReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.UpdateReq.Options;
  return proto.event_store.grpc.projections.UpdateReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.UpdateReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.UpdateReq.Options}
 */
proto.event_store.grpc.projections.UpdateReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmitEnabled(value);
      break;
    case 4:
      var value = new proto.event_store.grpc.projections.UpdateReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.UpdateReq.Empty.deserializeBinaryFromReader);
      msg.setNoEmitOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.UpdateReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.UpdateReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNoEmitOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.event_store.grpc.projections.UpdateReq.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.setQuery = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool emit_enabled = 3;
 * @return {boolean}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.getEmitEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.setEmitEnabled = function(value) {
  jspb.Message.setOneofField(this, 3, proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.clearEmitEnabled = function() {
  jspb.Message.setOneofField(this, 3, proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.hasEmitEnabled = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Empty no_emit_options = 4;
 * @return {?proto.event_store.grpc.projections.UpdateReq.Empty}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.getNoEmitOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.UpdateReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.UpdateReq.Empty, 4));
};


/** @param {?proto.event_store.grpc.projections.UpdateReq.Empty|undefined} value */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.setNoEmitOptions = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.event_store.grpc.projections.UpdateReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.clearNoEmitOptions = function() {
  this.setNoEmitOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.UpdateReq.Options.prototype.hasNoEmitOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.UpdateReq.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.UpdateReq.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.UpdateReq.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.UpdateReq.Empty}
 */
proto.event_store.grpc.projections.UpdateReq.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.UpdateReq.Empty;
  return proto.event_store.grpc.projections.UpdateReq.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.UpdateReq.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.UpdateReq.Empty}
 */
proto.event_store.grpc.projections.UpdateReq.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.UpdateReq.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.UpdateReq.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.UpdateReq.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateReq.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.UpdateReq.Options}
 */
proto.event_store.grpc.projections.UpdateReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.UpdateReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.UpdateReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.UpdateReq.Options|undefined} value */
proto.event_store.grpc.projections.UpdateReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.UpdateReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.UpdateReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.UpdateResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.UpdateResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.UpdateResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.UpdateResp}
 */
proto.event_store.grpc.projections.UpdateResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.UpdateResp;
  return proto.event_store.grpc.projections.UpdateResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.UpdateResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.UpdateResp}
 */
proto.event_store.grpc.projections.UpdateResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.UpdateResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.UpdateResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.UpdateResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.UpdateResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DeleteReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DeleteReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DeleteReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.DeleteReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DeleteReq}
 */
proto.event_store.grpc.projections.DeleteReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DeleteReq;
  return proto.event_store.grpc.projections.DeleteReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DeleteReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DeleteReq}
 */
proto.event_store.grpc.projections.DeleteReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.DeleteReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.DeleteReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DeleteReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DeleteReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DeleteReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.DeleteReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DeleteReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DeleteReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deleteEmittedStreams: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    deleteStateStream: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    deleteCheckpointStream: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DeleteReq.Options}
 */
proto.event_store.grpc.projections.DeleteReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DeleteReq.Options;
  return proto.event_store.grpc.projections.DeleteReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DeleteReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DeleteReq.Options}
 */
proto.event_store.grpc.projections.DeleteReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteEmittedStreams(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteStateStream(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteCheckpointStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DeleteReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DeleteReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeleteEmittedStreams();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDeleteStateStream();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDeleteCheckpointStream();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool delete_emitted_streams = 2;
 * @return {boolean}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.getDeleteEmittedStreams = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.setDeleteEmittedStreams = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool delete_state_stream = 3;
 * @return {boolean}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.getDeleteStateStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.setDeleteStateStream = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool delete_checkpoint_stream = 4;
 * @return {boolean}
 */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.getDeleteCheckpointStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.DeleteReq.Options.prototype.setDeleteCheckpointStream = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.DeleteReq.Options}
 */
proto.event_store.grpc.projections.DeleteReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.DeleteReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.DeleteReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.DeleteReq.Options|undefined} value */
proto.event_store.grpc.projections.DeleteReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.DeleteReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.DeleteReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DeleteResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DeleteResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DeleteResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DeleteResp}
 */
proto.event_store.grpc.projections.DeleteResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DeleteResp;
  return proto.event_store.grpc.projections.DeleteResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DeleteResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DeleteResp}
 */
proto.event_store.grpc.projections.DeleteResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DeleteResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DeleteResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DeleteResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DeleteResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StatisticsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StatisticsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StatisticsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.StatisticsReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StatisticsReq}
 */
proto.event_store.grpc.projections.StatisticsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StatisticsReq;
  return proto.event_store.grpc.projections.StatisticsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StatisticsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StatisticsReq}
 */
proto.event_store.grpc.projections.StatisticsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.StatisticsReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StatisticsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StatisticsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StatisticsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.StatisticsReq.Options.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.ModeCase = {
  MODE_NOT_SET: 0,
  NAME: 1,
  ALL: 2,
  TRANSIENT: 3,
  CONTINUOUS: 4,
  ONE_TIME: 5
};

/**
 * @return {proto.event_store.grpc.projections.StatisticsReq.Options.ModeCase}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getModeCase = function() {
  return /** @type {proto.event_store.grpc.projections.StatisticsReq.Options.ModeCase} */(jspb.Message.computeOneofCase(this, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StatisticsReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    all: (f = msg.getAll()) && proto.event_store.grpc.projections.StatisticsReq.Empty.toObject(includeInstance, f),
    pb_transient: (f = msg.getTransient()) && proto.event_store.grpc.projections.StatisticsReq.Empty.toObject(includeInstance, f),
    continuous: (f = msg.getContinuous()) && proto.event_store.grpc.projections.StatisticsReq.Empty.toObject(includeInstance, f),
    oneTime: (f = msg.getOneTime()) && proto.event_store.grpc.projections.StatisticsReq.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StatisticsReq.Options}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StatisticsReq.Options;
  return proto.event_store.grpc.projections.StatisticsReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StatisticsReq.Options}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.event_store.grpc.projections.StatisticsReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader);
      msg.setAll(value);
      break;
    case 3:
      var value = new proto.event_store.grpc.projections.StatisticsReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader);
      msg.setTransient(value);
      break;
    case 4:
      var value = new proto.event_store.grpc.projections.StatisticsReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader);
      msg.setContinuous(value);
      break;
    case 5:
      var value = new proto.event_store.grpc.projections.StatisticsReq.Empty;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader);
      msg.setOneTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StatisticsReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAll();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter
    );
  }
  f = message.getTransient();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter
    );
  }
  f = message.getContinuous();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter
    );
  }
  f = message.getOneTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.setName = function(value) {
  jspb.Message.setOneofField(this, 1, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.clearName = function() {
  jspb.Message.setOneofField(this, 1, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Empty all = 2;
 * @return {?proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getAll = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsReq.Empty, 2));
};


/** @param {?proto.event_store.grpc.projections.StatisticsReq.Empty|undefined} value */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.setAll = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.clearAll = function() {
  this.setAll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.hasAll = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Empty transient = 3;
 * @return {?proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getTransient = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsReq.Empty, 3));
};


/** @param {?proto.event_store.grpc.projections.StatisticsReq.Empty|undefined} value */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.setTransient = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.clearTransient = function() {
  this.setTransient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.hasTransient = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Empty continuous = 4;
 * @return {?proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getContinuous = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsReq.Empty, 4));
};


/** @param {?proto.event_store.grpc.projections.StatisticsReq.Empty|undefined} value */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.setContinuous = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.clearContinuous = function() {
  this.setContinuous(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.hasContinuous = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Empty one_time = 5;
 * @return {?proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.getOneTime = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsReq.Empty} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsReq.Empty, 5));
};


/** @param {?proto.event_store.grpc.projections.StatisticsReq.Empty|undefined} value */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.setOneTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.event_store.grpc.projections.StatisticsReq.Options.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.clearOneTime = function() {
  this.setOneTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.Options.prototype.hasOneTime = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StatisticsReq.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StatisticsReq.Empty;
  return proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StatisticsReq.Empty}
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StatisticsReq.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsReq.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.StatisticsReq.Options}
 */
proto.event_store.grpc.projections.StatisticsReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.StatisticsReq.Options|undefined} value */
proto.event_store.grpc.projections.StatisticsReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StatisticsResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StatisticsResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StatisticsResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    details: (f = msg.getDetails()) && proto.event_store.grpc.projections.StatisticsResp.Details.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StatisticsResp}
 */
proto.event_store.grpc.projections.StatisticsResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StatisticsResp;
  return proto.event_store.grpc.projections.StatisticsResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StatisticsResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StatisticsResp}
 */
proto.event_store.grpc.projections.StatisticsResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.StatisticsResp.Details;
      reader.readMessage(value,proto.event_store.grpc.projections.StatisticsResp.Details.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StatisticsResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StatisticsResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StatisticsResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.StatisticsResp.Details.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StatisticsResp.Details.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StatisticsResp.Details} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsResp.Details.toObject = function(includeInstance, msg) {
  var f, obj = {
    coreprocessingtime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    epoch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    effectivename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    writesinprogress: jspb.Message.getFieldWithDefault(msg, 5, 0),
    readsinprogress: jspb.Message.getFieldWithDefault(msg, 6, 0),
    partitionscached: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, ""),
    statereason: jspb.Message.getFieldWithDefault(msg, 9, ""),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    position: jspb.Message.getFieldWithDefault(msg, 12, ""),
    progress: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    lastcheckpoint: jspb.Message.getFieldWithDefault(msg, 14, ""),
    eventsprocessedafterrestart: jspb.Message.getFieldWithDefault(msg, 15, 0),
    checkpointstatus: jspb.Message.getFieldWithDefault(msg, 16, ""),
    bufferedevents: jspb.Message.getFieldWithDefault(msg, 17, 0),
    writependingeventsbeforecheckpoint: jspb.Message.getFieldWithDefault(msg, 18, 0),
    writependingeventsaftercheckpoint: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StatisticsResp.Details}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StatisticsResp.Details;
  return proto.event_store.grpc.projections.StatisticsResp.Details.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StatisticsResp.Details} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StatisticsResp.Details}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCoreprocessingtime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEpoch(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEffectivename(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWritesinprogress(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadsinprogress(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartitionscached(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatereason(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosition(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProgress(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastcheckpoint(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventsprocessedafterrestart(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckpointstatus(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBufferedevents(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWritependingeventsbeforecheckpoint(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWritependingeventsaftercheckpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StatisticsResp.Details.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StatisticsResp.Details} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StatisticsResp.Details.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoreprocessingtime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEffectivename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWritesinprogress();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getReadsinprogress();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPartitionscached();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatereason();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPosition();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getLastcheckpoint();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEventsprocessedafterrestart();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getCheckpointstatus();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getBufferedevents();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getWritependingeventsbeforecheckpoint();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getWritependingeventsaftercheckpoint();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * optional int64 coreProcessingTime = 1;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getCoreprocessingtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setCoreprocessingtime = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 version = 2;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 epoch = 3;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setEpoch = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string effectiveName = 4;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getEffectivename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setEffectivename = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 writesInProgress = 5;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getWritesinprogress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setWritesinprogress = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 readsInProgress = 6;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getReadsinprogress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setReadsinprogress = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 partitionsCached = 7;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getPartitionscached = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setPartitionscached = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string status = 8;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string stateReason = 9;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getStatereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setStatereason = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string mode = 11;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setMode = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string position = 12;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setPosition = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional float progress = 13;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setProgress = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string lastCheckpoint = 14;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getLastcheckpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setLastcheckpoint = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int64 eventsProcessedAfterRestart = 15;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getEventsprocessedafterrestart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setEventsprocessedafterrestart = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string checkpointStatus = 16;
 * @return {string}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getCheckpointstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setCheckpointstatus = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int64 bufferedEvents = 17;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getBufferedevents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setBufferedevents = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 writePendingEventsBeforeCheckpoint = 18;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getWritependingeventsbeforecheckpoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setWritependingeventsbeforecheckpoint = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 writePendingEventsAfterCheckpoint = 19;
 * @return {number}
 */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.getWritependingeventsaftercheckpoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.event_store.grpc.projections.StatisticsResp.Details.prototype.setWritependingeventsaftercheckpoint = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional Details details = 1;
 * @return {?proto.event_store.grpc.projections.StatisticsResp.Details}
 */
proto.event_store.grpc.projections.StatisticsResp.prototype.getDetails = function() {
  return /** @type{?proto.event_store.grpc.projections.StatisticsResp.Details} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StatisticsResp.Details, 1));
};


/** @param {?proto.event_store.grpc.projections.StatisticsResp.Details|undefined} value */
proto.event_store.grpc.projections.StatisticsResp.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StatisticsResp.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StatisticsResp.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.StateReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StateReq}
 */
proto.event_store.grpc.projections.StateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StateReq;
  return proto.event_store.grpc.projections.StateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StateReq}
 */
proto.event_store.grpc.projections.StateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.StateReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.StateReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.StateReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StateReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StateReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StateReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partition: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StateReq.Options}
 */
proto.event_store.grpc.projections.StateReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StateReq.Options;
  return proto.event_store.grpc.projections.StateReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StateReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StateReq.Options}
 */
proto.event_store.grpc.projections.StateReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StateReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StateReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StateReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.StateReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StateReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partition = 2;
 * @return {string}
 */
proto.event_store.grpc.projections.StateReq.Options.prototype.getPartition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.StateReq.Options.prototype.setPartition = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.StateReq.Options}
 */
proto.event_store.grpc.projections.StateReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.StateReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.StateReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.StateReq.Options|undefined} value */
proto.event_store.grpc.projections.StateReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StateReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StateReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.StateResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.StateResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.StateResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.StateResp}
 */
proto.event_store.grpc.projections.StateResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.StateResp;
  return proto.event_store.grpc.projections.StateResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.StateResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.StateResp}
 */
proto.event_store.grpc.projections.StateResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.StateResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.StateResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.StateResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.StateResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value state = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.event_store.grpc.projections.StateResp.prototype.getState = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.event_store.grpc.projections.StateResp.prototype.setState = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.StateResp.prototype.clearState = function() {
  this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.StateResp.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResultReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResultReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResultReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.ResultReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResultReq}
 */
proto.event_store.grpc.projections.ResultReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResultReq;
  return proto.event_store.grpc.projections.ResultReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResultReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResultReq}
 */
proto.event_store.grpc.projections.ResultReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.ResultReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.ResultReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResultReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResultReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResultReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.ResultReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResultReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResultReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResultReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partition: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResultReq.Options}
 */
proto.event_store.grpc.projections.ResultReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResultReq.Options;
  return proto.event_store.grpc.projections.ResultReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResultReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResultReq.Options}
 */
proto.event_store.grpc.projections.ResultReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResultReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResultReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResultReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.ResultReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.ResultReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partition = 2;
 * @return {string}
 */
proto.event_store.grpc.projections.ResultReq.Options.prototype.getPartition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.ResultReq.Options.prototype.setPartition = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.ResultReq.Options}
 */
proto.event_store.grpc.projections.ResultReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.ResultReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.ResultReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.ResultReq.Options|undefined} value */
proto.event_store.grpc.projections.ResultReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.ResultReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.ResultReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResultResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResultResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResultResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResultResp}
 */
proto.event_store.grpc.projections.ResultResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResultResp;
  return proto.event_store.grpc.projections.ResultResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResultResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResultResp}
 */
proto.event_store.grpc.projections.ResultResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResultResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResultResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResultResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResultResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value result = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.event_store.grpc.projections.ResultResp.prototype.getResult = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.event_store.grpc.projections.ResultResp.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.ResultResp.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.ResultResp.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResetReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResetReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResetReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.ResetReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResetReq}
 */
proto.event_store.grpc.projections.ResetReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResetReq;
  return proto.event_store.grpc.projections.ResetReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResetReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResetReq}
 */
proto.event_store.grpc.projections.ResetReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.ResetReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.ResetReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResetReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResetReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResetReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.ResetReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResetReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResetReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResetReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    writeCheckpoint: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResetReq.Options}
 */
proto.event_store.grpc.projections.ResetReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResetReq.Options;
  return proto.event_store.grpc.projections.ResetReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResetReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResetReq.Options}
 */
proto.event_store.grpc.projections.ResetReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWriteCheckpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResetReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResetReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResetReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWriteCheckpoint();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.ResetReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.ResetReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool write_checkpoint = 2;
 * @return {boolean}
 */
proto.event_store.grpc.projections.ResetReq.Options.prototype.getWriteCheckpoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.ResetReq.Options.prototype.setWriteCheckpoint = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.ResetReq.Options}
 */
proto.event_store.grpc.projections.ResetReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.ResetReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.ResetReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.ResetReq.Options|undefined} value */
proto.event_store.grpc.projections.ResetReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.ResetReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.ResetReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.ResetResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.ResetResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.ResetResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.ResetResp}
 */
proto.event_store.grpc.projections.ResetResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.ResetResp;
  return proto.event_store.grpc.projections.ResetResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.ResetResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.ResetResp}
 */
proto.event_store.grpc.projections.ResetResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.ResetResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.ResetResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.ResetResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.ResetResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.EnableReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.EnableReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.EnableReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.EnableReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.EnableReq}
 */
proto.event_store.grpc.projections.EnableReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.EnableReq;
  return proto.event_store.grpc.projections.EnableReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.EnableReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.EnableReq}
 */
proto.event_store.grpc.projections.EnableReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.EnableReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.EnableReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.EnableReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.EnableReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.EnableReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.EnableReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.EnableReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.EnableReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.EnableReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.EnableReq.Options}
 */
proto.event_store.grpc.projections.EnableReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.EnableReq.Options;
  return proto.event_store.grpc.projections.EnableReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.EnableReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.EnableReq.Options}
 */
proto.event_store.grpc.projections.EnableReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.EnableReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.EnableReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.EnableReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.EnableReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.EnableReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.EnableReq.Options}
 */
proto.event_store.grpc.projections.EnableReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.EnableReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.EnableReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.EnableReq.Options|undefined} value */
proto.event_store.grpc.projections.EnableReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.EnableReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.EnableReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.EnableResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.EnableResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.EnableResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.EnableResp}
 */
proto.event_store.grpc.projections.EnableResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.EnableResp;
  return proto.event_store.grpc.projections.EnableResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.EnableResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.EnableResp}
 */
proto.event_store.grpc.projections.EnableResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.EnableResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.EnableResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.EnableResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.EnableResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DisableReq.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DisableReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DisableReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.event_store.grpc.projections.DisableReq.Options.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DisableReq}
 */
proto.event_store.grpc.projections.DisableReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DisableReq;
  return proto.event_store.grpc.projections.DisableReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DisableReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DisableReq}
 */
proto.event_store.grpc.projections.DisableReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_store.grpc.projections.DisableReq.Options;
      reader.readMessage(value,proto.event_store.grpc.projections.DisableReq.Options.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DisableReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DisableReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DisableReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_store.grpc.projections.DisableReq.Options.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DisableReq.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DisableReq.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DisableReq.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableReq.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    writeCheckpoint: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DisableReq.Options}
 */
proto.event_store.grpc.projections.DisableReq.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DisableReq.Options;
  return proto.event_store.grpc.projections.DisableReq.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DisableReq.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DisableReq.Options}
 */
proto.event_store.grpc.projections.DisableReq.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWriteCheckpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DisableReq.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DisableReq.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DisableReq.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableReq.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWriteCheckpoint();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.event_store.grpc.projections.DisableReq.Options.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.event_store.grpc.projections.DisableReq.Options.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool write_checkpoint = 2;
 * @return {boolean}
 */
proto.event_store.grpc.projections.DisableReq.Options.prototype.getWriteCheckpoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.event_store.grpc.projections.DisableReq.Options.prototype.setWriteCheckpoint = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Options options = 1;
 * @return {?proto.event_store.grpc.projections.DisableReq.Options}
 */
proto.event_store.grpc.projections.DisableReq.prototype.getOptions = function() {
  return /** @type{?proto.event_store.grpc.projections.DisableReq.Options} */ (
    jspb.Message.getWrapperField(this, proto.event_store.grpc.projections.DisableReq.Options, 1));
};


/** @param {?proto.event_store.grpc.projections.DisableReq.Options|undefined} value */
proto.event_store.grpc.projections.DisableReq.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.event_store.grpc.projections.DisableReq.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_store.grpc.projections.DisableReq.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_store.grpc.projections.DisableResp.prototype.toObject = function(opt_includeInstance) {
  return proto.event_store.grpc.projections.DisableResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_store.grpc.projections.DisableResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_store.grpc.projections.DisableResp}
 */
proto.event_store.grpc.projections.DisableResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_store.grpc.projections.DisableResp;
  return proto.event_store.grpc.projections.DisableResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_store.grpc.projections.DisableResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_store.grpc.projections.DisableResp}
 */
proto.event_store.grpc.projections.DisableResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_store.grpc.projections.DisableResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_store.grpc.projections.DisableResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_store.grpc.projections.DisableResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_store.grpc.projections.DisableResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.event_store.grpc.projections);
